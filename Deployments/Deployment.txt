 Deployments:

1. Create a deployment called webapp with image nginx with 5 replicas
a. Use the below command to create a yaml file. 
   i.   kubectl create deploy webapp --image=nginx --dry-run -o yaml > webapp.yaml
   ii.  Edit it and add 5 replica’s

answer:
PS D:\DeskTop\DEVOPS_COURSE> kubectl create deploy webapp --image=nginx --dry-run=client -o yaml > webapp.yaml

change the yaml to :

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: webapp
  name: webapp
spec:
  replicas: 5
  selector:
    matchLabels:
      app: webapp
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: webapp
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}
status: {}


2. Get the deployment rollout status

answer: 

PS D:\DeskTop\DEVOPS_COURSE> kubectl get pods 
NAME                      READY   STATUS    RESTARTS   AGE
webapp-78d6769cf8-d7c96   1/1     Running   0          84s
webapp-78d6769cf8-l4mt2   1/1     Running   0          84s
webapp-78d6769cf8-pt7m2   1/1     Running   0          84s
webapp-78d6769cf8-w7sjv   1/1     Running   0          84s
webapp-78d6769cf8-x9clv   1/1     Running   0          84s

PS D:\DeskTop\DEVOPS_COURSE> kubectl rollout status deployment/webapp
deployment "webapp" successfully rolled out

3. Get the replicaset that created with this deployment 

answer:
PS D:\DeskTop\DEVOPS_COURSE> kubectl get replicaset -l app=webapp
NAME                DESIRED   CURRENT   READY   AGE
webapp-78d6769cf8   5         5         5       2m43s


4. EXPORT the yaml of the replicaset and pods of this deployment

answer: 
PS D:\DeskTop\DEVOPS_COURSE> kubectl get replicaset -l app=webapp -o yaml > replicaset_webapp.yaml
PS D:\DeskTop\DEVOPS_COURSE> kubectl get pods -l app=webapp -o yaml > pods_webapp.yaml

***the yaml files in the directory

5. Delete the deployment you just created and watch all the pods are also being deleted

answer:
PS D:\DeskTop\DEVOPS_COURSE> kubectl delete deploy webapp --cascade=background --wait=true
deployment.apps "webapp" deleted
PS D:\DeskTop\DEVOPS_COURSE> kubectl get pods -w
NAME                      READY   STATUS        RESTARTS   AGE
webapp-78d6769cf8-jh76c   0/1     Terminating   0          33s
webapp-78d6769cf8-lzftj   0/1     Terminating   0          33s
webapp-78d6769cf8-plqqt   0/1     Terminating   0          33s
webapp-78d6769cf8-pm4tj   0/1     Terminating   0          33s
webapp-78d6769cf8-wxfxd   0/1     Terminating   0          33s
webapp-78d6769cf8-pm4tj   0/1     Terminating   0          33s
webapp-78d6769cf8-wxfxd   0/1     Terminating   0          33s
webapp-78d6769cf8-wxfxd   0/1     Terminating   0          33s
webapp-78d6769cf8-wxfxd   0/1     Terminating   0          33s
webapp-78d6769cf8-pm4tj   0/1     Terminating   0          33s
webapp-78d6769cf8-pm4tj   0/1     Terminating   0          33s
webapp-78d6769cf8-plqqt   0/1     Terminating   0          33s
webapp-78d6769cf8-plqqt   0/1     Terminating   0          33s
webapp-78d6769cf8-plqqt   0/1     Terminating   0          33s
webapp-78d6769cf8-jh76c   0/1     Terminating   0          33s
webapp-78d6769cf8-jh76c   0/1     Terminating   0          33s
webapp-78d6769cf8-jh76c   0/1     Terminating   0          33s
webapp-78d6769cf8-lzftj   0/1     Terminating   0          33s
webapp-78d6769cf8-lzftj   0/1     Terminating   0          33s
webapp-78d6769cf8-lzftj   0/1     Terminating   0          33s

6. Create a deployment of webapp with image nginx:1.17.1 with container port 80 and verify the image version 
 . kubectl create deploy webapp --image=nginx:1.17.1 --dry-run -o yaml > webapp.yaml 
  a. add the port section (80)  and create the deployment 

answer:

PS D:\DeskTop\DEVOPS_COURS> kubectl create deploy webapp --image=nginx:1.17.1 --dry-run=client -o yaml > webapp.yaml
PS D:\DeskTop\DEVOPS_COURS> kubectl apply -f webapp.yaml
deployment.apps/webapp created
PS D:\DeskTop\DEVOPS_COURS> kubectl get pod -l app=webapp -o=jsonpath='{.items[0].spec.containers[0].image}'
nginx:1.17.1


7. Update the deployment with the image version 1.17.4 and verify 

answer:
S D:\DeskTop\DEVOPS_COURS> kubectl set image deployment/webapp nginx=nginx:1.17.4
deployment.apps/webapp image updated
PS D:\DeskTop\DEVOPS_COURS> kubectl get pod -l app=webapp -o=jsonpath='{.items[0].spec.containers[0].image}'
nginx:1.17.4

8. Check the rollout history and make sure everything is ok after the update

answer:

PS D:\DeskTop\DEVOPS_COURS> kubectl rollout history deployment/webapp
deployment.apps/webapp 
REVISION  CHANGE-CAUSE
1         <none>
2         <none>

PS D:\DeskTop\DEVOPS_COURS> kubectl rollout history deployment webapp --revision=1
deployment.apps/webapp with revision #1
Pod Template:
  Labels:       app=webapp
        pod-template-hash=5768b68bf
  Containers:
   nginx:
    Image:      nginx:1.17.1
    Port:       80/TCP
    Host Port:  0/TCP
    Environment:        <none>
    Mounts:     <none>
  Volumes:      <none>

PS D:\DeskTop\DEVOPS_COURS> kubectl rollout history deployment webapp --revision=2
deployment.apps/webapp with revision #2
Pod Template:
  Labels:       app=webapp
        pod-template-hash=7f88774d9b
  Containers:
   nginx:
    Image:      nginx:1.17.4
    Port:       80/TCP
    Host Port:  0/TCP
    Environment:        <none>
    Mounts:     <none>
  Volumes:      <none>

PS D:\DeskTop\DEVOPS_COURS> kubectl get pods -l app=webapp
NAME                      READY   STATUS    RESTARTS   AGE
webapp-7f88774d9b-v7kh6   1/1     Running   0          3m46s


9. Undo the deployment to the previous version 1.17.1 and verify Image has the previous version

answer:

PS D:\DeskTop\DEVOPS_COURS> kubectl rollout undo deployment/webapp
deployment.apps/webapp rolled back
PS D:\DeskTop\DEVOPS_COURS> kubectl rollout status deployment/webapp
deployment "webapp" successfully rolled out
PS D:\DeskTop\DEVOPS_COURS> kubectl get pod -l app=webapp -o=jsonpath='{.items[0].spec.containers[0].image}'
nginx:1.17.1

10. Update the deployment with the wrong image version 1.100 and verify something is wrong with the deployment  . Expect: kubectl get pods (ImagePullErr) 
  a.  Undo the deployment with the previous version and verify everything is Ok 
  b. kubectl rollout history deploy webapp --revision=7 
  c. Check the history of the specific revision of that deployment 
  d. update the deployment with the image version latest and check the history and verify nothing is going on

answer:
PS D:\DeskTop\DEVOPS_COURS> kubectl set image deployment/webapp nginx=nginx:1.100
deployment.apps/webapp image updated
PS D:\DeskTop\DEVOPS_COURS> kubectl get pods
NAME                      READY   STATUS         RESTARTS   AGE
webapp-5768b68bf-xx7f8    1/1     Running        0          88s
webapp-86c5d47987-ktwvj   0/1     ErrImagePull   0          7s
PS D:\DeskTop\DEVOPS_COURS> kubectl rollout undo deployment/webapp
deployment.apps/webapp rolled back
PS D:\DeskTop\DEVOPS_COURS> kubectl get pods
NAME                     READY   STATUS    RESTARTS   AGE
webapp-5768b68bf-xx7f8   1/1     Running   0          105s
PS D:\DeskTop\DEVOPS_COURS> kubectl rollout history deploy webapp --revision=7
error: unable to find the specified revision
PS D:\DeskTop\DEVOPS_COURSE> kubectl rollout history deployment webapp
deployment.apps/webapp
REVISION  CHANGE-CAUSE
2         <none>
4         <none>
5         <none>

PS D:\DeskTop\DEVOPS_COURSE> kubectl rollout history deployment webapp --revision=7
error: unable to find the specified revision
PS D:\DeskTop\DEVOPS_COURS> kubectl rollout history deployment webapp
deployment.apps/webapp 
REVISION  CHANGE-CAUSE
2         <none>
4         <none>
5         <none>

PS D:\DeskTop\DEVOPS_COURS> kubectl rollout history deployment webapp --revision=5
deployment.apps/webapp with revision #5
Pod Template:
  Labels:       app=webapp
        pod-template-hash=5768b68bf
  Containers:
   nginx:
    Image:      nginx:1.17.1
    Port:       80/TCP
    Host Port:  0/TCP
    Environment:        <none>
    Mounts:     <none>
  Volumes:      <none>

11. Apply the autoscaling to this deployment with minimum 10 and maximum 20 replicas and target CPU of 85% and verify hpa is created and replicas are increased to 10 from 1 

answer:
kubectl autoscale deployment webapp --cpu-percent=85 --min=10 --max=20
horizontalpodautoscaler.autoscaling/webapp autoscaled
PS D:\DeskTop\DEVOPS_COURS> kubectl get hpa
NAME     REFERENCE           TARGETS         MINPODS   MAXPODS   REPLICAS   AGE
webapp   Deployment/webapp   <unknown>/85%   10        20        0          12s

PS D:\DeskTop\DEVOPS_COURS> kubectl get deployment -w
NAME     READY   UP-TO-DATE   AVAILABLE   AGE
webapp   10/10   10           10          16m


PS D:\DeskTop\DEVOPS_COURS>  kubectl get pods
NAME                     READY   STATUS    RESTARTS   AGE
webapp-5768b68bf-bw8ng   1/1     Running   0          2m14s
webapp-5768b68bf-g8rdx   1/1     Running   0          2m14s
webapp-5768b68bf-h6t99   1/1     Running   0          2m14s
webapp-5768b68bf-hn8t4   1/1     Running   0          2m14s
webapp-5768b68bf-ktnsm   1/1     Running   0          2m14s
webapp-5768b68bf-lf6vv   1/1     Running   0          2m14s
webapp-5768b68bf-lr7tn   1/1     Running   0          2m14s
webapp-5768b68bf-p6vh8   1/1     Running   0          2m14s
webapp-5768b68bf-w92k7   1/1     Running   0          2m14s
webapp-5768b68bf-xx7f8   1/1     Running   0          7m31s


12.

13. Clean the cluster by deleting deployment and hpa you just created 

answer:

PS D:\DeskTop\DEVOPS_COURS>  kubectl delete hpa webapp
horizontalpodautoscaler.autoscaling "webapp" deleted
PS D:\DeskTop\DEVOPS_COURS> kubectl delete deployment webapp
deployment.apps "webapp" deleted

14. Create a job and make it run 10 times one after one (run > exit > run >exit ..) using the following configuration: kubectl create job hello-job --image=busybox --dry-run -o yaml -- echo "Hello I am from job" > hello-job.yaml”
  a. Add to the above job completions: 10 inside the yaml

answer:
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-job
spec:
  completions: 10
  template:
    metadata:
      name: hello-job
    spec:
      containers:
      - name: hello-job
        image: busybox
        command: ["/bin/sh", "-c", "echo 'Hello, I am from job'"]
      restartPolicy: Never

PS D:\DeskTop\DEVOPS_COURS> kubectl apply -f hello-job.yaml
job.batch/hello-job created


