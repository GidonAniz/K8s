CONFIG MAP: 

1. Create a file called config.txt with two values key1=value1 and key2=value2 and verify the file cat >> config.txt << EOF key1=value1 key2=value2 EOF cat config.txt 

answer:
PS D:\DeskTop\DEVOPS_COURS> @"
>> key1=value1
>> key2=value2
>> "@ | Out-File -FilePath "config.txt"

PS D:\DeskTop\DEVOPS_COURS> Get-Content -Path "D:\DeskTop\DEVOPS_COURS\config.txt"
key1=value1
key2=value2



2.  Create a configmap named keyvalcfgmap and read data from the file config.txt and verify that configmap is created correctly 
Create an nginx pod and load environment values from the above configmap keyvalcfgmap and exec into the pod and verify the environment variables and delete the pod // first run this command to save the pod yml kubectl run nginx --image=nginx --restart=Never --dry-run -o yaml > nginx-pod.ym

answer:
PS D:\DeskTop\DEVOPS_COURS> kubectl run nginx --image=nginx --restart=Never --dry-run -o yaml > nginx-pod.yaml
PS D:\DeskTop\DEVOPS_COURS> kubectl run nginx --image=nginx --restart=Never --dry-run=client -o yaml > nginx-pod.yaml

first : nginx-pod.yaml:
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: nginx
  name: nginx
spec:
  containers:
  - image: nginx
    name: nginx
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}


after change: nginx-pod.yaml:
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    run: nginx
spec:
  containers:
  - name: nginx
    image: nginx
    envFrom:
      - configMapRef:
          name: keyvalcfgmap
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Never


